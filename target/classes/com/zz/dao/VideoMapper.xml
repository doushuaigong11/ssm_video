<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zz.dao.VideoMapper">
  <resultMap id="BaseResultMap" type="com.zz.pojo.Video">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="time" jdbcType="INTEGER" property="time" />
    <result column="detail" jdbcType="INTEGER" property="detail" />
    <result column="speaker_id" jdbcType="INTEGER" property="speakerId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="video_url" jdbcType="VARCHAR" property="videoUrl" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="play_num" jdbcType="INTEGER" property="playNum" />
    <result column="speaker_name" property="speakerName"></result>
    <result column="course_title" property="courseTitle"></result>

  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zz.pojo.Video">
    <result column="detail" jdbcType="LONGVARCHAR" property="detail" />
  </resultMap>

  <select id="findAllVideo"  resultMap="BaseResultMap">
    select v.id,v.title,v.detail,s.speaker_name,v.course_id,c.course_title,v.time,v.play_num from video v
    inner join speaker s
    on v.speaker_id = s.id
    inner join course c
    on c.id = v.course_id
  </select>

  <delete id="deleteByIds">
    delete from video
    <where>
      id in
      <foreach collection="array" open="(" close=")" item="ids" separator=",">
        #{ids}
      </foreach>
    </where>
  </delete>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, time, speaker_id, course_id, video_url, image_url, play_num
  </sql>
  <sql id="Blob_Column_List">
    detail
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zz.pojo.VideoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from video
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zz.pojo.VideoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from video
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from video
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from video
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zz.pojo.VideoExample">
    delete from video
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zz.pojo.Video">
    insert into video (id, title, time, 
      speaker_id, course_id, video_url, 
      image_url, play_num, detail,speakerName
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{time,jdbcType=INTEGER}, 
      #{speakerId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{videoUrl,jdbcType=VARCHAR}, 
      #{imageUrl,jdbcType=VARCHAR}, #{playNum,jdbcType=INTEGER}, #{detail,jdbcType=LONGVARCHAR},
      #{seakerName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zz.pojo.Video">
    insert into video
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="speakerId != null">
        speaker_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="videoUrl != null">
        video_url,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="playNum != null">
        play_num,
      </if>
      <if test="detail != null">
        detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=INTEGER},
      </if>
      <if test="speakerId != null">
        #{speakerId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="videoUrl != null">
        #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="playNum != null">
        #{playNum,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zz.pojo.VideoExample" resultType="java.lang.Long">
    select count(*) from video
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update video
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=INTEGER},
      </if>
      <if test="record.speakerId != null">
        speaker_id = #{record.speakerId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.videoUrl != null">
        video_url = #{record.videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.imageUrl != null">
        image_url = #{record.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.playNum != null">
        play_num = #{record.playNum,jdbcType=INTEGER},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update video
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=INTEGER},
      speaker_id = #{record.speakerId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      video_url = #{record.videoUrl,jdbcType=VARCHAR},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      play_num = #{record.playNum,jdbcType=INTEGER},
      detail = #{record.detail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update video
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=INTEGER},
      speaker_id = #{record.speakerId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      video_url = #{record.videoUrl,jdbcType=VARCHAR},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      play_num = #{record.playNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zz.pojo.Video">
    update video
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="speakerId != null">
        speaker_id = #{speakerId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="videoUrl != null">
        video_url = #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="playNum != null">
        play_num = #{playNum,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zz.pojo.Video">
    update video
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=INTEGER},
      speaker_id = #{speakerId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      video_url = #{videoUrl,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      play_num = #{playNum,jdbcType=INTEGER},
      detail = #{detail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zz.pojo.Video">
    update video
    set
      title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=INTEGER},
      speaker_id = #{speakerId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      video_url = #{videoUrl,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      play_num = #{playNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>